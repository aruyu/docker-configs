#!/bin/bash
#==
#   NOTE      - backupd.sh
#   Author    - Aru
#
#   Created   - 2023.04.14
#   Github    - https://github.com/aruyu
#   Contact   - vine9151@gmail.com
#/



T_CO_RED='\e[1;31m'
T_CO_YELLOW='\e[1;33m'
T_CO_GREEN='\e[1;32m'
T_CO_BLUE='\e[1;34m'
T_CO_GRAY='\e[1;30m'
T_CO_NC='\e[0m'

CURRENT_PROGRESS=0

function script_print()
{
  echo -ne "$T_CO_BLUE[backupd]$T_CO_NC$1"
}

function script_print_notify()
{
  echo -ne "$T_CO_BLUE[backupd]$T_CO_NC$T_CO_GREEN-Notify- $1$T_CO_NC"
}

function script_print_error()
{
  echo -ne "$T_CO_BLUE[backupd]$T_CO_NC$T_CO_RED-Error- $1$T_CO_NC"
}

function error_exit()
{
  script_print_error "$1\n\n"
  exit 1
}

function backup_database()
{
  mysqldump -h ${domain} -P ${port} -u ${db_username} -p${db_userpw} ${db_name} > ${backup_directory}/${backup_date}.spl
}




#==
#   Starting codes in blew
#/

if [[ $EUID -ne 0 ]]; then
  error_exit "This script must be run as ROOT!"
fi


domain=$(awk '/^domain/{print $3}' /backup/backup.d/default.conf)
port=$(awk '/^port/{print $3}' /backup/backup.d/default.conf)
db_username=$(awk '/^user/{print $3}' /backup/backup.d/default.conf)
db_userpw=$(awk '/^password/{print $3}' /backup/backup.d/default.conf)
db_name=$(awk '/^database/{print $3}' /backup/backup.d/default.conf)
directory=$(awk '/^directory/{print $3}' /backup/backup.d/default.conf)


while true; do
  directory_month=`date +%Y_%m`
  backup_date=`date +%m%d_%H_%M`
  backup_directory=${directory}/${directory_month}

  if [ ! -d "${backup_directory}" ]; then
    script_print_error "${backup_directory} PATH NOT EXISTS."
    mkdir -p ${backup_directory}
  fi

  script_print_notify "Backup RedmineDB to ${backup_directory}/${backup_date}.spl"
  backup_database || error_exit "RedmineDB Backup Failed!! You must check out '/backup/backup.d/default.conf'."
  script_print_notify "RedmineDB Backup Successfully Done."

  sleep 1d
done
